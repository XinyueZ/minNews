<?xml version="1.0" encoding="UTF-8"?>
<project name="custom_rules">
	<target name="build">
		<!--Reading project properties-->
		<loadproperties srcfile="project.properties"/>
		<property name="target" value="${target} "/>
		<property name="android.library" value="${android.library} "/>
		<property name="android.library.reference.1" value="${android.library.reference.1}"/>
		<echo message="#######target: ${target}#######"/>
		<echo message="#######android.library: ${android.library}#######"/>

		<!--Update all build.xml, local.properties-->
		<antcall target="op.updatePrj"/>

		<!--
			Update all build.xml, local.properties in submodules, project libraries, etc.
			Copy v4 as well.
		-->
		<script language="javascript">
			<![CDATA[
				 importClass(java.util.Properties);
				 importClass(java.io.FileInputStream);
				 importClass(java.util.Enumeration);
				 importClass(java.io.File);


				 function antcall(_target, _targetParam, _paramValue){
				    var antcall = project.createTask("antcall");
				    antcall.init();
				    antcall.setTarget(_target);
				    antcallParam = antcall.createParam();
			    	antcallParam.setName(_targetParam);
					antcallParam.setValue(_paramValue);
					antcall.execute();
				 }

				 var prop = new Properties();
				 prop.load(new FileInputStream("project.properties"));

				 var em = prop.keys();
				 var v4f = null;
				 var f = null;
				 while(em.hasMoreElements()) {
				    var str = em.nextElement();
				    if(str.indexOf("android.library.reference") != -1) {
						antcall("op.updateLibPrj", "libPath", prop.get(str));
						v4f = prop.get(str) + "/libs/android-support-v4.jar";
						f = new File(v4f);
						if(f.exists()) {
					        antcall("op.update.v4", "libFullName", v4f);
						}
				    }
				 }

			]]>
		</script>

		<!--Application specialized tasks-->
		<echo>#######Replacing location of ActionBar.#######</echo>
		<replaceregexp match="../../../your/path/to/actionbarsherlock"
		               replace='../../../../libs/ActionBar/library'>
			<fileset dir="submodules/ActionBar-PullToRefresh/extras/actionbarsherlock">
				<include name="project.properties"/>
			</fileset>
		</replaceregexp>
		<antcall target="op.volley.as.lib"/>

		<!--Make application-->
		<echo message="#######Building: ${job_name}#######"/>
		<echo message="#######Mode: ${mode}#######"/>
		<antcall target="clean"/>
		<antcall target="${mode}"/>

		<!--After building process.-->
		<echo>#######After building.#######</echo>
		<echo message="#######Build number: ${build_number}#######"/>

		<!--Find debug build-->
		<condition property="debug.present">
			<available file="bin/${job_name}-debug.apk"/>
		</condition>
		<antcall target="op.debug"/>

		<!--Find release build-->
		<condition property="release.present">
			<available file="bin/${job_name}-release.apk"/>
		</condition>
		<antcall target="op.release"/>

		<!--Reset-->
		<echo>#######Reset.#######</echo>
		<exec executable="git" dir=".">
			<arg value="reset"/>
			<arg value="--hard"/>
			<arg value="HEAD"/>
		</exec>
	</target>

	<target name="op.debug" if="debug.present">
		<echo>#######Find debug build.#######</echo>
		<echo message="#######Output: bin/${job_name}-debug.apk#######"/>
		<copy file="bin/${job_name}-debug.apk"
		      tofile="bin/${job_name}-${build_number}-debug.apk"
		      overwrite="true"/>
	</target>

	<target name="op.release" if="release.present">
		<echo>#######Find release build.#######</echo>
		<echo message="#######Output: bin/${job_name}-release.apk#######"/>
		<copy file="bin/${job_name}-release.apk"
		      tofile="bin/${job_name}-${build_number}-release.apk"
		      overwrite="true"/>
	</target>

	<target name="op.updatePrj">
		<echo message="${android} update project -p . -n ${job_name}"/>
		<exec executable="${android}" dir=".">
			<arg value="update"/>
			<arg value="project"/>
			<arg value="-p"/>
			<arg value="."/>
			<arg value="-n"/>
			<arg value="${job_name}"/>
		</exec>
	</target>

	<target name="op.updateLibPrj">
		<echo message="${android} update project -s -p ${libPath}"/>
		<exec executable="${android}" dir=".">
			<arg value="update"/>
			<arg value="project"/>
			<arg value="-s"/>
			<arg value="-p"/>
			<arg value="${libPath}"/>
		</exec>
	</target>

	<target name="op.volley.as.lib">
		<echo message="${android} create lib-project -p submodules/Volley/ -k com.android.volley -t 31"/>
		<exec executable="${android}" dir=".">
			<arg value="create"/>
			<arg value="lib-project"/>
			<arg value="-p"/>
			<arg value="submodules/Volley/"/>
			<arg value="-k"/>
			<arg value="com.android.volley"/>
			<arg value="-t"/>
			<arg value="31"/>
		</exec>
	</target>

	<target name="op.update.v4">
		<copy file="libs/android-support-v4.jar"
		      tofile="${libFullName}"
			      overwrite="true"/>
	</target>
</project>